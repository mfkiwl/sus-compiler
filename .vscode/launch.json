{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Debug (GBD) tinyTestFile.sus in 'sus_compiler'",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceRoot}/target/debug/sus_compiler",
            "preLaunchTask": "Build for Debugging",
            "MIMode": "gdb",
            "miDebuggerPath": "/home/lennart/tools/gdb/gdb",
            "args": [
                "--debug-whitelist", "TEST",
                "--debug", "TEST", // Temporary to add in code when debugging
                "tinyTestFile.sus",
            ],
            "cwd": "${workspaceFolder}",
            // For those venturing into this file: setting up breakpoints (rust_panic and __rust_start_panic)
            // with "setupCommands" does not work. You've got to add them manually to the list of breakpoints
        },
        {
            "type": "lldb",
            "request": "launch",
            "name": "Debug tinyTestFile.sus in 'sus_compiler'",
            "cargo": {
                "args": [
                    "build",
                    "--bin=sus_compiler",
                    "--package=sus_compiler"
                ],
                "filter": {
                    "name": "sus_compiler",
                    "kind": "bin"
                }
            },
            "sourceLanguages": ["rust"],
            "args": [
                "--debug-whitelist", "TEST",
                "tinyTestFile.sus",
                "--standalone", "TEST",
                "--debug", "TEST", // Temporary to add in code when debugging
                "--debug", "print-flattened-pre-typecheck",
                "--debug", "print-flattened",
                "--debug", "print-instantiated-modules-pre-concrete-typecheck",
                "--debug", "print-instantiated-modules",
            ],
            "cwd": "${workspaceFolder}"
        },
        {
            "type": "lldb",
            "request": "launch",
            "name": "Debug BitSerialMatrixMultiply in 'sus_compiler'",
            "cargo": {
                "args": [
                    "build",
                    "--bin=sus_compiler",
                    "--package=sus_compiler"
                ],
                "filter": {
                    "name": "sus_compiler",
                    "kind": "bin"
                }
            },
            "sourceLanguages": ["rust"],
            "args": [
                "--module-and-dependencies",
                "BitSerialMatrixMultiply",
            ],
            "cwd": "${workspaceFolder}"
        },
        {
            "type": "lldb",
            "request": "launch",
            "name": "Debug 'sus_compiler'",
            "cargo": {
                "args": [
                    "build",
                    "--bin=sus_compiler",
                    "--package=sus_compiler"
                ],
                "filter": {
                    "name": "sus_compiler",
                    "kind": "bin"
                }
            },
            "sourceLanguages": ["rust"],
            "args": [
                "--codegen"
            ],
            "cwd": "${workspaceFolder}"
        },
        {
            "type": "lldb",
            "request": "launch",
            "name": "Debug 'sus_compiler' with arguments",
            "cargo": {
                "args": [
                    "build",
                    "--bin=sus_compiler",
                    "--package=sus_compiler"
                ],
                "filter": {
                    "name": "sus_compiler",
                    "kind": "bin",
                }
            },
            "sourceLanguages": ["rust"],
            "args": ["bad_syntax.sus", "test.sus", "slidesExampleCode.sus", "tinyTestFile.sus", "stl/core.sus"],
            "cwd": "${workspaceFolder}"
        },
        {
            "type": "lldb",
            "request": "launch",
            "name": "Debug unit tests in executable 'sus_compiler'",
            "cargo": {
                "args": [
                    "test",
                    "--no-run",
                    "--bin=sus_compiler",
                    "--package=sus_compiler"
                ],
                "filter": {
                    "name": "sus_compiler",
                    "kind": "bin"
                }
            },
            "sourceLanguages": ["rust"],
            "args": [
                "--exact",
                "--nocapture",
                "--show-output",
            ],
            "cwd": "${workspaceFolder}"
        },
        {
			"type": "extensionHost",
			"request": "launch",
			"name": "Launch SUS LSP",
			"runtimeExecutable": "${execPath}",
			"args": ["--extensionDevelopmentPath=${workspaceRoot}"],
			"outFiles": ["${workspaceRoot}/client/out/**/*.js"],
			"preLaunchTask": {
				"type": "npm",
				"script": "watch"
			}
		},
        {
            "type": "lldb",
            "request": "launch",
            "name": "Debug crash dump",
            "cargo": {
                "args": [
                    "build",
                    "--bin=sus_compiler",
                    "--package=sus_compiler"
                ],
                "filter": {
                    "name": "sus_compiler",
                    "kind": "bin"
                }
            },
            "sourceLanguages": ["rust"],
            "args": [
                "--no-redump"
                // By default it'll grab all .sus files in this directory. Doesn't use ./reproduce.sh though...
            ],
            "cwd": "${input:pickDumpFile}",
        }
    ],
    "inputs": [
        {
            "id": "pickDumpFile",
            "type": "command",
            "command": "extension.commandvariable.file.pickFile",
            "args": {
                "description": "Pick a crash dump folder",
                "fromFolder": {
                    "predefined": [
                        "${userHome}/.sus/0.3.0-devel/crash_dumps/",
                        "${workspaceFolder}/crash_dumps/",
                    ]
                },
                "showDirs": true,
            } 
        } 
    ] 
}